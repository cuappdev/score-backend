from bson.objectid import ObjectId
from src.database import db


class YoutubeVideo:
    """
    A model representing a youtube video.

    Attributes:
        - `id`              The ID of the video (auto-generated by MongoDB).
        - `title`           The title of the video.
        - `description`     The desription of the video.
        - `thumbnail`       The thumbnail of the video, as a URL string pointing to a `.jpg` file.
        - `url`             The URL of the video.
        - `published_at`    The date and time the video was published.
    """

    def __init__(self, title, description, thumbnail, b64_thumbnail, url, published_at, id=None):
        self.id = id if id else str(ObjectId())
        self.title = title
        self.description = description
        self.thumbnail = thumbnail
        self.b64_thumbnail = b64_thumbnail
        self.url = url
        self.published_at = published_at

    def to_dict(self):
        """
        Converts the YoutbeVideo object to a dictionary format for MongoDB storage.
        """
        return {
            "_id": self.id,
            "title": self.title,
            "description": self.description,
            "thumbnail": self.thumbnail,
            "b64_thumbnail": self.b64_thumbnail,
            "url": self.url,
            "published_at": self.published_at,
        }

    @staticmethod
    def from_dict(data):
        """
        Converts a MongoDB document to a YoutubeVideo object.
        """
        return YoutubeVideo(
            id=data.get("_id"),
            title=data.get("title"),
            description=data.get("description"),
            thumbnail=data.get("thumbnail"),
            b64_thumbnail=data.get("b64_thumbnail"),
            url=data.get("url"),
            published_at=data.get("published_at"),
        )
